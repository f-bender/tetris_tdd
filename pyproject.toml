[project]
name = "tetris"
version = "0.1.0"
description = "Custom Tetris game"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "ansi>=0.3.7",
    "click>=8.2.0",
    "httpx>=0.28.1",
    "keyboard>=0.13.5",
    "numpy>=2.2.5",
    "pandas>=2.2.3",
    "playsound3>=3.2.3",
    "pynput>=1.8.1",
    "scikit-image>=0.25.2",
]

[project.optional-dependencies]
gemini = ["google-generativeai>=0.8.5"]
gamepad = ["inputs>=0.5"]
pygame = ["pygame>=2.6.1"]

[dependency-groups]
dev = ["pytest>=8.3.5"]

[project.scripts]
tetris = "tetris.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py313"
src = ["src"]
fix = true
unsafe-fixes = true

[tool.ruff.lint]
pydocstyle.convention = "google"
select = ["ALL"]
ignore = [
    "D1",     # missing docstrings         (use own judgement)
    "COM812", # missing trailing comma     (handled by formatter)
    "S101",   # assert used                (used only for things that should never fail and need no check in production)
    "S311",   # cryptographically weak RNG (I don't do cryptography in this project - not relevant)
    "TD",     # TODO comment formatting    (I don't care for the formatting - note that FIX still reminds me to handle TODOs)
]
unfixable = [
    "T201",   # no automatic removing prints
    "FLY002", # no automatic changing string literals
    "F841",   # no automatic removing unused variables
]

[tool.ruff.lint.per-file-ignores]
# allow redundant import aliases to signify explicit export in __init__.py files
"**/__init__.py" = ["PLC0414"]
# prints are allowed in CLI UI, and space-filling-coloring fuzz test and drawer
"src/tetris/ui/cli/*" = ["T201"]
"src/tetris/space_filling_coloring/drawer.py" = ["T201"]
"src/tetris/space_filling_coloring/fill_and_colorize_config.py" = ["T201"]
# unused method arguments are ok (required to conform to protocols, but not necessarily used)
"src/tetris/game_logic/rules/*" = ["ARG002"]
"src/tetris/controllers/*" = ["ARG002"]

"tests/*" = ["INP001"] # we want no __init__.py files in tests
# boolean positional args are okay to avoid clutter
"tests/game_logic/test_action_counter.py" = ["FBT003"]
# we do want to test and thus need to access private methods here
"tests/space_filling_coloring/test_tetromino_space_filler.py" = ["SLF001"]
"tests/space_filling_coloring/test_four_colorizer.py" = ["SLF001"]
"tests/board_manipulations/test_gravity.py" = ["SLF001"]

[tool.mypy]
strict = true
warn_return_any = false
mypy_path = "src"
